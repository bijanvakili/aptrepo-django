#!/usr/bin/js
'use strict';

/*
 * jslint
 *
 * Description:
 *  Runs JSLint as a command line tool for static code analysis
 *
 * Requires:
 *  rhino - Javascript engine 
 *
 * Usage:
 * 	jslint [--jslint-home=HOMEDIR] file.js [file.js [ ... ] ]
 *
 * HOMEDIR - root level directory for jslint (defaults to '/')
 */


/*
 * Globals
 */
var stderr = java.lang.System.err;

/*
 * Outputs the results in a human readable format
 */
function printJSLintErrors( filename, jslint ) {
    for (i = 0; i < jslint.errors.length; i += 1) {
        e = jslint.errors[i];
        if (e) {
            stderr.print('[' + filename + '] Lint at line ' + e.line + ' character ' +
                   		 e.character + ': ' + e.reason);
            stderr.print((e.evidence || '').
                    	 replace(/^\s*(\S*(\s+\S+)*)\s*$/, "$1"));
            stderr.print('');
        }
    }	
}

var jslint_home = '';
if ( arguments[0].search(/^--jslint-home=\S+/) === 0) {
	var arg = arguments.shift();
	jslint_home = arg.substr( arg.indexOf('=') + 1);
}


// load JSLint
load(jslint_home + '/etc/jslint/options.js');
load(jslint_home + '/lib/js/jslint.js');

var exitCode = 0;
for (i = 0; i < arguments.length; i += 1 ) {

	var input_filename = arguments[i];
	var body = readFile(input_filename);
	if ( !body ) {
		stderr.println('ERROR: Unable to read file ' + input_filename );
		quit( 1 );
	}

	var result = JSLINT(body, jslint_options); 
	if ( result ) {
		print( '[' + input_filename + ']: syntax OK');
	} else {
		printJSLintErrors( input_filename, JSLINT );
		exitCode = 2;
	}
}

quit( exitCode );
